/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lyy.pg.orcl.view;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ResourceBundle;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import lyy.pg.orcl.model.DBSource;
import lyy.pg.orcl.util.DB;
import lyy.pg.orcl.util.JdbcUtil;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

/**
 *
 * @author Liu Yuanyuan
 */
public class DBConfigDialog extends javax.swing.JDialog
{

    private Logger logger = LogManager.getLogger(getClass());
    private ResourceBundle constBundle = ResourceBundle.getBundle("constants");

    private DB type;

    private int response = -1;
    private DBSource dbSource = null;

    public DBConfigDialog(Frame parent, boolean modal, DB type)
    {
        super(parent, modal);
        initComponents();
        this.type = type;
        
        
        //config
        setTitle(constBundle.getString("configDB"));
        cbbType.setModel(new DefaultComboBoxModel(new Object[]
        {
            type
        }));
        updateForType(type);

        
        //regist listener
        cbbType.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                updateForType((DB) cbbType.getSelectedItem());
            }
        });
        btnOK.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                btnOKActionPerformed(e);
            }
        });
        btnCancle.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                btnCancleActionPerformed(e);
            }
        });
        btnReset.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                btnResetActionPerformed(e);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lblType = new javax.swing.JLabel();
        cbbType = new javax.swing.JComboBox();
        lblHost = new javax.swing.JLabel();
        tfHost = new javax.swing.JTextField();
        lblPort = new javax.swing.JLabel();
        tfPort = new javax.swing.JTextField();
        lblDB = new javax.swing.JLabel();
        tfDB = new javax.swing.JTextField();
        lblUser = new javax.swing.JLabel();
        tfUser = new javax.swing.JTextField();
        lblPwd = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnCancle = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        tfPwd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        lblType.setText(constBundle.getString("dbType"));

        lblHost.setText(constBundle.getString("host"));

        lblPort.setText(constBundle.getString("port"));

        lblDB.setText(constBundle.getString("db"));

        lblUser.setText(constBundle.getString("user"));

        lblPwd.setText(constBundle.getString("pwd"));

        btnOK.setText(constBundle.getString("ok"));

        btnCancle.setText(constBundle.getString("cancle"));

        btnReset.setText(constBundle.getString("reset"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(cbbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDB, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancle)
                        .addGap(10, 10, 10)
                        .addComponent(btnReset))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHost, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPort, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUser, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfDB, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfHost)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfPwd))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(cbbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHost)
                    .addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPort)
                    .addComponent(tfPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDB)
                    .addComponent(tfDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPwd)
                    .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancle)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateForType(DB type)
    {
        if (type == DB.PostgreSQL)
        {
            tfPort.setText("5432");
            tfDB.setText("postgres");
        } else if (type == DB.Oracle)
        {
            tfPort.setText("1521");
            tfDB.setText("orcl");
        } else
        {
            tfPort.setText("");
        }
    }

    private void btnOKActionPerformed(ActionEvent e)
    {
        logger.debug(e.getActionCommand());

        try
        {
            dbSource = new DBSource();
            dbSource.setType(type);
            dbSource.setHost(tfHost.getText());
            dbSource.setPort(Integer.valueOf(tfPort.getText()));
            dbSource.setDb(tfDB.getText());
            dbSource.setUser(tfUser.getText());
            dbSource.setPwd(String.valueOf(tfPwd.getPassword()));

            JdbcUtil.getConnection(dbSource);
            response = 0;
        } catch (Exception ex)
        {
            response = -1;
            logger.error(ex.getMessage());
            JOptionPane.showMessageDialog(this, ex.getMessage(),
                    constBundle.getString("error"), JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(System.out);
        }
    }

    private void btnCancleActionPerformed(ActionEvent e)
    {
        logger.debug(e.getActionCommand());
        
        this.dispose();
    }

    private void btnResetActionPerformed(ActionEvent e)
    {
        logger.debug(e.getActionCommand());

        tfHost.setText("");
        updateForType(type);
        tfUser.setText("");
        tfPwd.setText("");
    }

    public int getResponse()
    {
        return response;
    }

    public DBSource getDBSource()
    {
        return dbSource;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancle;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox cbbType;
    private javax.swing.JLabel lblDB;
    private javax.swing.JLabel lblHost;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblPwd;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblUser;
    private javax.swing.JTextField tfDB;
    private javax.swing.JTextField tfHost;
    private javax.swing.JTextField tfPort;
    private javax.swing.JPasswordField tfPwd;
    private javax.swing.JTextField tfUser;
    // End of variables declaration//GEN-END:variables
}
